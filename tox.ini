# Tox configuration file
# Read more under https://tox.wiki/

[tox]
minversion = 4.4.5
isolated_build = True
# Matrix of test used to test
env_list = py{311,310},lint,commit,docs,doctests,linkcheck,build,clean
requires =
    tox>=4

[testenv]
description = Invoke pytest to run automated tests
package = wheel
wheel_build_env = .pkg
extras = testing
commands =
    pd2: pip install 'pandas>=2'
    pytest {tty:--color=yes} {posargs}

[testenv:commit]
description = run the pre-commit hook configured via .pre-commit-config.yaml
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[testenv:{build,clean}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
# https://setuptools.pypa.io/en/stable/build_meta.html#how-to-use-it
skip_install = True
changedir = {toxinidir}
deps =
    build: build[virtualenv]
commands =
    clean: python -c 'import shutil; [shutil.rmtree(p, True) for p in ("build", "dist", "docs/_build")]'
    clean: python -c 'import pathlib, shutil; [shutil.rmtree(p, True) for p in pathlib.Path("src").glob("*.egg-info")]'
    build: python -m build {posargs}


[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
setenv =
    DOCSDIR = {toxinidir}/docs
    BUILDDIR = {toxinidir}/docs/_build
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
deps =
    -r {toxinidir}/docs/requirements.txt
    # ^  requirements.txt shared with Read The Docs
commands =
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}



[testenv:publish]
description =
    Publish the package you have been developing to PyPi.
skip_install = True
changedir = {toxinidir}
passenv =
; using .pypirc
deps = twine
commands =
    python -m twine check dist/*
    python -m twine upload --skip-existing dist/*


[testenv:lint]
description = Perform static analysis and style checks
skip_install = True
deps = pre-commit
passenv =
   HOMEPATH
   PROGRAMDATA
   SETUPTOOLS_*
commands =
   pre-commit run --all-files {posargs:--show-diff-on-failure}
